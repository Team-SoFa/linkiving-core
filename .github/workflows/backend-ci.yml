name: ✨ Linkiving backend CI ✨

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: ✨ Checkout repository
        uses: actions/checkout@v5

      - name: ✨ JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ✨ Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🗂️ Create test application.yml
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          
          touch ./application-test.yml
          echo "APPLICATION_TEST" > ./application-test.yml         

      - name: ✨ Gradlew 권한 설정
        run: chmod +x ./gradlew

      - name: 🏗️ Gradle 빌드
        run: ./gradlew build

      - name: 🧪 테스트 실행
        run: ./gradlew test

      - name: 📢 Discord 알림 (성공)
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: success
          title: "✅ CI 빌드 성공!"
          description: "모든 테스트가 통과했습니다."
          color: 0x00ff00

      - name: 📢 Discord 알림 (실패)
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: failure
          title: "❌ CI 빌드 실패!"
          description: "테스트 또는 빌드에 실패했습니다."
          color: 0xff0000

      - name: 📊 테스트 결과 업로드
        uses: actions/upload-artifact@v4
        if: always()  # 성공/실패 관계없이 항상 업로드
        with:
          name: test-results-${{ github.run_number }}
          path: |
            build/reports/tests/test/
            build/test-results/test/
          retention-days: 7  # 7일 후 자동 삭제
